from _typeshed import Incomplete

class Data: ...

class ManipulateData(Data):
    def remove_titles(self, name: str) -> str: ...
    def to_singular(self, plural: str) -> str: ...

class CleanData(Data):
    binder: Incomplete
    def __init__(self, binder: dict) -> None: ...

class RemoveNoneFound(CleanData):
    def clean_none_found(self) -> dict: ...

class DeduplicateKeys(CleanData):
    manipulate_data: Incomplete
    def __init__(self, binder: dict) -> None: ...
    deuplicated: Incomplete
    def __call__(self) -> None: ...

class ReshapeDict(CleanData):
    def __init__(self, binder: dict) -> None: ...
    reshaped: Incomplete
    def __call__(self) -> None: ...

class FinalReshape(ReshapeDict): ...

class SortDictionary(CleanData):
    def __call__(self) -> dict: ...

class ReplaceNarrator(CleanData):
    def replace(self, narrator_name: str) -> dict: ...

def clean_lorebinders(lorebinder: dict, narrator: str): ...
